<File version="3.2">
  <FileID>dcbf3bac-f5fb-4a33-8b1b-2432218a060f</FileID>
  <Preview>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
YXWLaTfNZlC2mZ0q0LsBhfqXL/IVci9NJeUVpukMqMIM4ZL6DuWZAy03t6kwg6+soV3JWYVOO6rq
GFZeRZPzo4J8UwaKmoZV3tSl1JwipRbXK7+qzflagRloCZnFyjMHXFTT5ryOoLC61XkqvbCy3gzC
EmVXmP2paVdBdZvztInddoU5ULuc/X3HolpzvXlgyhu7lV1Wb86m21XaarZnjqeyfdSsx26j0HnQ
7H5WtA0op7hSiZlFps21OvtS0tJv9tMM9GbzAJdWKfJZrGKza8xA7nS2be/sElMS7MfSxg7nONNK
fGXEbqd8ZXv289LGTuVVtjuDvbjG/mpGu7nPzNm/uY19eqfC7FNF25AKqlqcX9ew93lZU7dyK9tM
aRgx94lphFmlpliZdpierbTyTrOeRueFjjmmdZaYx8bue15dn3LNvtrf4LDH5dsPQggh35fqzlEl
mZPAxOxa8/1z1B3K9gzezhPfC9vNTDEf7Rvr2LP11WXsAK40t3mWUu684Du7rFF1PdPmpHPcSXXn
hPm+bk7sGuwZuTmpNikxxaC6a9JdxsbeJqfcvuiwQVEpZaoys8D+CMH+aMDZnvloi0C52Zb9PNdc
Lm0xM2ZlGfuMvT3RTTSlxZYZe0z22Br6Z5RsTlxXxvxfZ//4T/fYojOEKp2Y4dRiDrC62aRFxbYM
VDaqqKrBXG5WcW27bzkzcCo7xswGzdm/vbzyeW3PlHtddee4OaDRlY++r9d0T6mmy95BvuuqzEfn
NuYg7OWqb3ycMF+b9C1r1unEXL+6PXc5s17nemd/7LrtMxJmmZX41rO6X8O+fTMPxOp1q8vXdE+a
EmGGe0auouKznKfWa7snfOs3d6x7vOajva09jrXbcbJyP6xuy+6jb/0rx75y/dr9d27j3E/2a779
re+bUkFJmaKS8lXcOmq2tXIMzvHa+2zSua09jtXbfWtfCCGE+I39/p1lTsgiEovNEG5TZkmLm6zS
1m/lW183H+3T9nnVnc4zAGWNpiQ09Lixn5c1fTOljV9/3VmmqU/pxbXmTL5TTxNKlFnc/I3trG7L
3+XVZJe1mmMwty1rc2dS0+CcmWP5z1cAesaWnaFSbQedGVTOZTtYVmIHo41v2JiBaJf5K7GD7lWN
b//N2bh9hsNctmXCDmZ/y250bOmoME3O7oe97G8ZQnyx/0YJIT8svu+taSWtis2qUVx23XMn3iQ2
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
ykJz+xS19vZraNj+yaFllWQnKre+2wz0ORWnJiqjuFa93Y2qb+jU5EijElKyNTYzY/ZtREPt1Qq/
d0/3TBIyilVZkGnWF6uUvHJNjI6rNDNdTf2D6q6vVEf/sJqr8hVnvt48sGR2sVdJyanqHhhSp9nH
5dkJ9fQMa6C9xjmmjjFzPyxPKDUuVqVNA2bfppSREq+qTrOvgyOaX5x39mFhbkI5aXEq6xgxE3lC
uSmJzj4UVLdqcqBX2WlZGhgfVkNZqQZnKAAAgB9n0wrAq2Csp0nxMTGKMckualy51jsoAADgHRQA
uCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4
KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgo
AADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgA
AOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA
4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADg
HRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAd
FAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0U
ALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQA
uCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4
KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgo
AADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgA
AOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA
4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADg
HRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAd
FAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0U
ALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQA
uCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4
KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgo
AADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgA
AOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA
4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADg
HRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAd
FAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0U
ALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdFAC4KAAA4B0UALgoAADgHRQA
uCgAAOAdFAC4KAAA4B0UALgoAADgHRQAuCgAAOAdG1oAqqrrtLy8tPIZXnbLy8vOYwYAeP1teAGo
qKxVbV0DeQViH6tKCgAAeMKGFgB7Rjk7O6fZOfJKxDxW9jEDALz+NrQAAACAlxMFAAAAD6IAAADg
QRQAAAA8iAIAAIAHbWgBmJqaUkVFhaqrq8krEPtY2ccMAPD629ACMDAwoOzsbDU2Nqquro68xLGP
kX2s+vv7Vx49AMDrbEMLwODgoEpKStTV1aX29vaXLG1q7+zW0PCgOs3nPeaO6OnqVFubv2VX0tam
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</Preview>
  <Form>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
+DJ/f9l/938BdCgN2J12AAA=</Form>
  <Code><![CDATA[#Determine Launch Location, used for project template creation
$LaunchLocation = Split-Path ($MyInvocation.MyCommand.Path)
#A conditional because my PowerShell IDE doesn't like $MyInvocation :)
If (!($LaunchLocation)) {
	$LaunchLocation = "E:\PowershellGameEngine\PowershellTRPGEngine"
}
#Import Modules
foreach ($Module in (Get-ChildItem "$LaunchLocation\Modules\EngineModules")) {
	Import-Module $Module.FullName
}
# Global Variables used for Engine
#Determine if a project is loaded, and its location
$Script:ProjectLoaded = $false
$Script:ProjectLocation = ""
#Arrays to load JSON Files for items, scenes, etc.
$CharacterJSONFiles = @()
$ItemJSONFiles = @()
$NPCJSONFiles = @()
$ViewJSONFiles = @()
$Script:SceneJSONFiles = @()
$EventJSONFiles = @()
#Define the currently selected scene
$Script:CurrentSceneFriendlyName = ""
$Script:CurrentSceneGUID = ''
#An array of expected subfolders for a project. Used to load existing projects, and create new ones
$ProjectSubFolders = @(
	"Content",
	"Content\Items",
	"Content\NPCs",
	"Content\Character",
	"Content\Scenes",
	"Content\Views",
	"Content\Events",
	"Content\Items"
)
#Splash screen to load (needed?)
$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image    = $pictureboxSplashScreenHidden.Image
		Title    = 'Loading PowerShell TRPG Engine...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Function to load a new project
function Update-CurrentProject {
	param (
		[Parameter(mandatory = $True)]
		[System.String]$ProjectFile
	)
	If (Test-Path $ProjectFile) {
		$ProjectHeaderContent = Get-Content $ProjectFile | ConvertFrom-Json
		$MainForm.Text = "PowerShell TRPG Engine - $($ProjectHeaderContent.project_name) - $($ProjectHeaderContent.version)"
		$Script:ProjectLoaded = $true
		$Script:ProjectLocation = "$($ProjectHeaderContent.localPath)"
		$MainForm.Update()
	}
	Else {
		throw "Failed to open project file"
	}
	#Test if project folders exist
	foreach ($Folder in $ProjectSubFolders) {
		if (!(Test-Path ("$($Script:ProjectLocation)\$Folder"))) {
			throw "Project folder $Folder is missing!"
		}
	}
	#Load JSON Files into Arrays
	$CharacterJSONFiles = Get-ChildItem -Path "$($ProjectHeaderContent.localPath)\$($ProjectSubFolders[3])"
	$ItemJSONFiles = Get-ChildItem -Path "$($ProjectHeaderContent.localPath)\$($ProjectSubFolders[7])"
	$NPCJSONFiles = Get-ChildItem -Path "$($ProjectHeaderContent.localPath)\$($ProjectSubFolders[2])"
	$ViewJSONFiles = Get-ChildItem -Path "$($ProjectHeaderContent.localPath)\$($ProjectSubFolders[5])"
	$EventJSONFiles = Get-ChildItem -Path "$($ProjectHeaderContent.localPath)\$($ProjectSubFolders[6])"
	Get-RPGScenes
}
#Function to make a new project
function New-RPGProject {
	$FileBrowser = New-Object System.Windows.Forms.SaveFileDialog -Property @{
		InitialDirectory = [Environment]::GetFolderPath('Desktop')
		Filter		     = "PowerShell RPG (*.PSRPG) | *.PSRPG"
	}
	$FileBrowser.ShowDialog()
	#If a save location is chosen
	If ($FileBrowser.FileName) {
		$ProjectName = Show-PopupInputBox -InputDescription "Enter Project Name"
		#Format folder and file name
		$ProjectDirectoryPath = ""
		$ProjectFileName = ""
		$SplitItem = ($FileBrowser.FileName).split("\")
		$ProjectFileName = $SplitItem[$SplitItem.Count - 1]
		$ProjectDirectoryPath = [System.String]($FileBrowser.FileName).Replace("\$ProjectFileName", "")
		Try {
			#Make the folder
			New-Item -Path "$ProjectDirectoryPath\$($ProjectFileName.Replace(".PSRPG", "$Null"))" -ItemType directory
		}
		catch {
			throw "Failed to create project directory!"
		}
		Try {
			#Make the project file
			$ProjectTemplateFile = Get-Content "$LaunchLocation\Engine\Templates\ProjectSaveFile.JSon" | ConvertFrom-Json
			$ProjectTemplateFile.LocalPAth = "$ProjectDirectoryPath\$($ProjectFileName.Replace(".PSRPG", "$Null"))"
			$ProjectTemplateFile.project_name = "$ProjectName"
			$ProjectTemplateFile | ConvertTo-Json | Out-File "$ProjectDirectoryPath\$($ProjectFileName.Replace(".PSRPG", "$Null"))\$($ProjectFileName)" -Force
		}
		catch {
			throw "Failed to create Project file!"
		}
		#Make the sub folders
		foreach ($ITem in $ProjectSubFolders) {
			try {
				New-Item "$ProjectDirectoryPath\$($ProjectFileName.Replace(".PSRPG", "$Null"))\$Item" -ItemType directory -Force
			}
			catch {
				throw "Failed to create folder $Item"
			}
		}
		#Set current Project status
		Update-CurrentProject -ProjectFile "$ProjectDirectoryPath\$($ProjectFileName.Replace(".PSRPG", "$Null"))\$($ProjectFileName)"
	}
	Else {
		Write-Host "No file saved"
	}
}
#Function to load / reload scenes
function Get-RPGScenes {
	$Script:SceneJSONFiles = Get-ChildItem -Path "$($Script:ProjectLocation)\$($ProjectSubFolders[4])"
	$TabSceneCreator_ListBoxSceneList.Items.Clear()
	foreach ($Item in $Script:SceneJSONFiles) {
		$ParsedItem = Get-Content $Item.FullName | ConvertFrom-Json
		$TabSceneCreator_ListBoxSceneList.Items.Add("$($ParsedItem.SceneName)")
	}
	$TabSceneCreator_ListBoxSceneList.Update()
}
function New-RPGScene {
	#Get GUID and Name of Scene
	$SceneGUID = New-Guid -GuidType 'Scene'
	$SceneName = Show-PopupInputBox -InputDescription 'Enter Scene Name'
	$SceneTemplate = Get-Content "$LaunchLocation\Engine\Templates\SceneTemplate.JSon" | ConvertFrom-Json
	$SceneTemplate.SceneName = $SceneName
	$SceneTemplate.SceneGuid = $SceneGUID
	#Make Scene
	Try {
		$SceneTemplate | ConvertTo-Json | Out-File "$($Script:ProjectLocation)\$($ProjectSubFolders[4])\$SceneGuid.json" -Force
	}
	catch {
		Write-Output $Error
		throw "Failed to make scene!"
	}
	#Refresh scenes
	Try {
		Get-RPGScenes
	}
	catch {
		throw "Failed to refresh scenes!"
	}
}

#A function to show a text input box and return the entered text
function Show-PopupInputBox {
	param (
		[Parameter(Mandatory = $True)]
		[String]$InputDescription
	)
	$form = New-Object System.Windows.Forms.Form
	$form.Text = 'Input Requested'
	$form.Size = New-Object System.Drawing.Size(300, 200)
	$form.StartPosition = 'CenterScreen'
	$form.FormBorderStyle = 'FixedDialog'
	
	$okButton = New-Object System.Windows.Forms.Button
	$okButton.Location = New-Object System.Drawing.Point(75, 120)
	$okButton.Size = New-Object System.Drawing.Size(75, 23)
	$okButton.Text = 'OK'
	$okButton.DialogResult = [System.Windows.Forms.DialogResult]::OK
	$form.AcceptButton = $okButton
	$form.Controls.Add($okButton)
	
	$cancelButton = New-Object System.Windows.Forms.Button
	$cancelButton.Location = New-Object System.Drawing.Point(150, 120)
	$cancelButton.Size = New-Object System.Drawing.Size(75, 23)
	$cancelButton.Text = 'Cancel'
	$cancelButton.DialogResult = [System.Windows.Forms.DialogResult]::Cancel
	$form.CancelButton = $cancelButton
	$form.Controls.Add($cancelButton)
	
	$label = New-Object System.Windows.Forms.Label
	$label.Location = New-Object System.Drawing.Point(10, 20)
	$label.Size = New-Object System.Drawing.Size(280, 20)
	$label.Text = $InputDescription
	$form.Controls.Add($label)
	
	$textBox = New-Object System.Windows.Forms.TextBox
	$textBox.Location = New-Object System.Drawing.Point(10, 40)
	$textBox.Size = New-Object System.Drawing.Size(260, 20)
	$form.Controls.Add($textBox)
	
	$form.Topmost = $true
	
	$form.Add_Shown({
			$textBox.Select()
		})
	$result = $form.ShowDialog()
	
	if ($result -eq [System.Windows.Forms.DialogResult]::OK) {
		$DialogEntry = $textBox.Text
		return $DialogEntry
	}
}
#region Splash Screen Helper Function
function Show-SplashScreen {
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 2,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image) {
		$pict.Image = $Image;
	}
	else {
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title) {
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else {
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0) {
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) {
		$splashForm.ShowDialog()
	}
	else {
		$splashForm.Show()
	}
	
	if ($PassThru) {
		return $splashForm
	}
}
#endregion
#Button to make a new project
$newToolStripMenuItem_Click = {
	If ($ProjectLoaded) {
		#Need to add some functionality to confirm that you want to create a new project
		#Essentially, ask to save the existing project before making a new one
	}
	#If a file is not loaded, make a new project
	Else {
		New-RPGProject
	}
	
}
#Open an existing project
$openToolStripMenuItem_Click = {
	If ($ProjectLoaded) {
		#Need to add some functionality to confirm that you want to create a new project
		#Essentially, ask to save the existing project before making a new one
	}
	#If a file is not loaded, open a project
	Else {
		$FileBrowser = New-Object System.Windows.Forms.OpenFileDialog -Property @{
			InitialDirectory = [Environment]::GetFolderPath('Desktop')
			Filter		     = "PowerShell RPG (*.PSRPG) | *.PSRPG"
		}
		$FileBrowser.ShowDialog()
		#If a save location is chosen
		If ($FileBrowser.FileName) {
			Update-CurrentProject -ProjectFile $FileBrowser.FileName
		}
	}
}

#endregion

$TabSceneCreator_btnNewScene_Click = {
	New-RPGScene
}

$TabSceneCreator_ListBoxSceneList_SelectedIndexChanged = {
	$Script:CurrentSceneFriendlyName = "$($TabSceneCreator_ListBoxSceneList.SelectedItem)"
	$MainScreenCurrentSceneLabel.Text = "Current Scene: $($Script:CurrentSceneFriendlyName)"
	$MainScreenCurrentSceneLabel.Update()
	
}


]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>