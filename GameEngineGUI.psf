<File version="3.2">
  <FileID>dcbf3bac-f5fb-4a33-8b1b-2432218a060f</FileID>
  <Preview>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
oppW025azKBsNztVqE8CivRvOwsUci9dpRWVpukMqNIM4dKGTuWbA60wt6k0g6+8sUMp2UVOO6ru
HFZ+ZbPzo4ICUwaKm4dV0dyttNxipZU0qKC63flcoRloSVklyjcHXFzb7ryOoKimzXkqvaiqwQzC
UuVUmv2p7VBhTbvztInddqU5ULuc/X3H4jpzvXlgKpp6lFPeYM6mO1TWZrZnjqeqY9Ssx26jyHnQ
7H5Wtg8ot6RKyVnFps21OftS2tpv9tMM9BbzAJdVKyomXvE5tWYgdznbtnd2qSkJ9t+ypk7nONNL
3WXEbqdieXv247KmLuVXdTiDvaTW/mpGh7nPzNm/uY19eqfS7FNl+5AKq1udX9ew93l5c4/yqtpN
aRgx94lphNllpliZdpiRo/SKLrOeJueFjrmmdZaax8bue379c+WZfbW/wWGPy70fhBBC/lZqukb1
zJwEJufUme+foy+Gsj2Dt/PE/cJ2M1PMv/aNdezZ+soydgBXmdvEpFY4L/jOKW9Sfe+UOel0Oanp
Gjff182JXaM9Izcn1SalphjUdE+8WMbG3ia3wr7osFHRqeWqNrPA/gjB/mjA2Z751xaBCrMt+3Ge
uVzWambM8jL2GXt7optsSostM/aY7LE19k8rxZy4Lo/5n2b/+E/P2IIzhKqcmOHUag6wpsWkVSW2
DFQ1qbi60VxuUUldh3s5M3CqOsfMBs3Zv728/HFd7+SL62q6XOaARpf/dX++tmdStd32DnJfV23+
dW5jDsJerv7ev+PmcxPuZc06nZjrV7b3YjmzXud6Z3/suu0zEmaZ5bjXs7Jfw+59Mw/EynUry9f2
TJgSYYZ7Zp6iE7Odp9bresbd6zd37IvjNf/a29rjeHk7Tpbvh5Vt2X10r3/52Jevf3n/nds495P9
nHt/G55PqrC0XNHPClTSNmq2tXwMzvHa+2zCua09jpXb/WhfCCGEeIz9/p1tTsgik0vMEG5XVmnr
i2SXtf0oP/q8+dc+bZ9f0+U8A1DeZEpCY++L2I/Lm7+fsqbvPu8s0/xcGSV15ky+S0+TSpVV0vK9
7axsy9PlleSUt5ljMLctb38xk5oHZ80cK3i1AtA7tuQMlRo76Mygci7bwbIcOxht3MPGDES7zE/E
Drp3Ne79N2fj9hkOc9mWCTuYPS37pmNLR6VpcnY/7GVPyxDijv0aJYS8XtzfW9NL2xSfXauEnPpX
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
szij0YnvfxE6luY0Ov7dz+Gt6YkxDY9+t+5J8/H0wvLlF19nixoZ/e7pezO+lfQkQlkV7Zp3Tu2X
ND0943zGLuv6wTas+dlZzc0tr9igAKwtCgDgexQAeOXLAvAuowCsLQoA4HsUAHhFAXCjAKwtCgDg
exQAeEUBcKMArC0KAOB7FAB4RQFwowCsLQoA4HsUAHhFAXCjAKwtCgDgexQAeEUBcKMArC0KAOB7
FAB4RQFwowCsLQoA4HsUAHhFAXCjAKwtCgDgexQAeEUBcKMArC0KAOB7FAB4RQFwowCsLQoA4HsU
AHhFAXCjAKwtCgDgexQAeEUBcKMArC0KAOB7FAB4RQFwowCsLQoA4HsUAHhFAXCjAKwtCgDgexQA
eEUBcKMArC0KAOB7FAB4RQFwowCsLQoA4HsUAHhFAXCjAKwtCgDgexQAeEUBcKMArC0KAOB7FAB4
RQFwowCsLQoA4HsUAHhFAXCjAKwtCgDgexQAeEUBcKMArC0KAOB7FAB4RQFwowCsLQoA4HsUAHhF
AXCjAKwtCgDgexQAeEUBcKMArC0KAOB7FAB4RQFwowCsLQoA4HsUAHhFAXCjAKwtCgDgexQAeEUB
cKMArC0KAOB7FAB4RQFwowCsLQoA4HsUAHhFAXCjAKwtCgDgexQAeEUBcKMArC0KAOB7FAB4RQFw
owCsLQoA4HsUAHhFAXCjAKwtCgDgexQAeEUBcKMArC0KAOB7FAB4RQFwowCsLQoA4HsUAHhFAXCj
AKwtCgDgexQAeEUBcKMArC0KAOB7FAB4RQFwowCsLQoA4HsUAHhFAXCjAKwtCgDgexQAeEUBcKMA
rC0KAOB7FAB4RQFwowCsLQoA4HsUAHhFAXCjAKwtCgDgexQAeEUBcKMArC0KAOB7FAB4RQFwowCs
LQoA4HsUAHhFAXCjAKwtCgDgexQAeEUBcKMArC0KAOB7FAB4RQFwowCsLQoA4HsUAHhFAXCjAKwt
CgDgexQAeEUBcKMArC0KAOB7FAB4RQFwowCsLQoA4HsUAHhFAXCjAKwtCgDgexQAeEUBcKMArC0K
AOB7FAB4RQFwowCsLQoA4HsUAHhFAXCjAKwtCgDgexQAeEUBcKMArC0KAOB7FAB4RQFwowCsLQoA
4HsUAHhFAXCjAKwtCgDgexQAeEUBcKMArC0KAOB7FAB4RQFwowCsLQoA4HsUAHhFAXCjAKwtCgDg
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</Preview>
  <Form>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</Form>
  <Code><![CDATA[#Determine Launch Location, used for project template creation
$LaunchLocation = Split-Path ($MyInvocation.MyCommand.Path)
#A conditional because my PowerShell IDE doesn't like $MyInvocation :)
If (!($LaunchLocation)) {
	$LaunchLocation = "E:\PowershellGameEngine\PowershellTRPGEngine"
}
#Import Modules
foreach ($Module in (Get-ChildItem "$LaunchLocation\Modules\EngineModules")) {
	Import-Module $Module.FullName
}
# Global Variables used for Engine
#Determine if a project is loaded, and its location
$Script:ProjectLoaded = $false
$Script:ProjectLocation = ""
#Arrays to load JSON Files for items, scenes, etc.
$CharacterJSONFiles = @()
$ItemJSONFiles = @()
$NPCJSONFiles = @()
$ViewJSONFiles = @()
$Script:SceneJSONObjects = @()
$EventJSONFiles = @()
#Define the currently selected scene
$Script:CurrentSceneFriendlyName = ""
$Script:CurrentScene = $null
#An array of expected subfolders for a project. Used to load existing projects, and create new ones
$ProjectSubFolders = @(
	"Content",
	"Content\Items",
	"Content\NPCs",
	"Content\Character",
	"Content\Scenes",
	"Content\Views",
	"Content\Events",
	"Content\Items"
)
#Splash screen to load (needed?)
$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image    = $pictureboxSplashScreenHidden.Image
		Title    = 'Loading PowerShell TRPG Engine...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Function to load a new project
function Update-CurrentProject {
	param (
		[Parameter(mandatory = $True)]
		[System.String]$ProjectFile
	)
	If (Test-Path $ProjectFile) {
		$ProjectHeaderContent = Get-Content $ProjectFile | ConvertFrom-Json
		$MainForm.Text = "PowerShell TRPG Engine - $($ProjectHeaderContent.project_name) - $($ProjectHeaderContent.version)"
		$Script:ProjectLoaded = $true
		$Script:ProjectLocation = "$($ProjectHeaderContent.localPath)"
		$MainForm.Update()
	}
	Else {
		throw "Failed to open project file"
	}
	#Test if project folders exist
	foreach ($Folder in $ProjectSubFolders) {
		if (!(Test-Path ("$($Script:ProjectLocation)\$Folder"))) {
			throw "Project folder $Folder is missing!"
		}
	}
	#Load JSON Files into Arrays
	$CharacterJSONFiles = Get-ChildItem -Path "$($ProjectHeaderContent.localPath)\$($ProjectSubFolders[3])"
	$ItemJSONFiles = Get-ChildItem -Path "$($ProjectHeaderContent.localPath)\$($ProjectSubFolders[7])"
	$NPCJSONFiles = Get-ChildItem -Path "$($ProjectHeaderContent.localPath)\$($ProjectSubFolders[2])"
	$ViewJSONFiles = Get-ChildItem -Path "$($ProjectHeaderContent.localPath)\$($ProjectSubFolders[5])"
	$EventJSONFiles = Get-ChildItem -Path "$($ProjectHeaderContent.localPath)\$($ProjectSubFolders[6])"
	Get-RPGScenes
}
#Function to make a new project
function New-RPGProject {
	$FileBrowser = New-Object System.Windows.Forms.SaveFileDialog -Property @{
		InitialDirectory = [Environment]::GetFolderPath('Desktop')
		Filter		     = "PowerShell RPG (*.PSRPG) | *.PSRPG"
	}
	$FileBrowser.ShowDialog()
	#If a save location is chosen
	If ($FileBrowser.FileName) {
		$ProjectName = Show-PopupInputBox -InputDescription "Enter Project Name"
		#Format folder and file name
		$ProjectDirectoryPath = ""
		$ProjectFileName = ""
		$SplitItem = ($FileBrowser.FileName).split("\")
		$ProjectFileName = $SplitItem[$SplitItem.Count - 1]
		$ProjectDirectoryPath = [System.String]($FileBrowser.FileName).Replace("\$ProjectFileName", "")
		Try {
			#Make the folder
			New-Item -Path "$ProjectDirectoryPath\$($ProjectFileName.Replace(".PSRPG", "$Null"))" -ItemType directory
		}
		catch {
			throw "Failed to create project directory!"
		}
		Try {
			#Make the project file
			$ProjectTemplateFile = Get-Content "$LaunchLocation\Engine\Templates\ProjectSaveFile.JSon" | ConvertFrom-Json
			$ProjectTemplateFile.LocalPAth = "$ProjectDirectoryPath\$($ProjectFileName.Replace(".PSRPG", "$Null"))"
			$ProjectTemplateFile.project_name = "$ProjectName"
			$ProjectTemplateFile | ConvertTo-Json | Out-File "$ProjectDirectoryPath\$($ProjectFileName.Replace(".PSRPG", "$Null"))\$($ProjectFileName)" -Force
		}
		catch {
			throw "Failed to create Project file!"
		}
		#Make the sub folders
		foreach ($ITem in $ProjectSubFolders) {
			try {
				New-Item "$ProjectDirectoryPath\$($ProjectFileName.Replace(".PSRPG", "$Null"))\$Item" -ItemType directory -Force
			}
			catch {
				throw "Failed to create folder $Item"
			}
		}
		#Set current Project status
		Update-CurrentProject -ProjectFile "$ProjectDirectoryPath\$($ProjectFileName.Replace(".PSRPG", "$Null"))\$($ProjectFileName)"
	}
	Else {
		Write-Host "No file saved"
	}
}
#Function to load / reload scenes
function Get-RPGScenes {
	$SceneJSONFiles = Get-ChildItem -Path "$($Script:ProjectLocation)\$($ProjectSubFolders[4])"
	$TabSceneCreator_ListBoxSceneList.Items.Clear()
	foreach ($Item in $SceneJSONFiles) {
		$ParsedItem = Get-Content $Item.FullName | ConvertFrom-Json
		$Script:SceneJSONObjects += $ParsedItem
		$TabSceneCreator_ListBoxSceneList.Items.Add("$($ParsedItem.SceneName)")
	}
	$TabSceneCreator_ListBoxSceneList.Update()
}
function New-RPGScene {
	#Get GUID and Name of Scene
	$SceneGUID = New-Guid -GuidType 'Scene'
	$SceneName = Show-PopupInputBox -InputDescription 'Enter Scene Name'
	$SceneTemplate = Get-Content "$LaunchLocation\Engine\Templates\SceneTemplate.JSon" | ConvertFrom-Json
	$SceneTemplate.SceneName = $SceneName
	$SceneTemplate.SceneGuid = $SceneGUID
	#Make Scene
	Try {
		$SceneTemplate | ConvertTo-Json | Out-File "$($Script:ProjectLocation)\$($ProjectSubFolders[4])\$SceneGuid.json" -Force
	}
	catch {
		Write-Output $Error
		throw "Failed to make scene!"
	}
	#Refresh scenes
	Try {
		Get-RPGScenes
	}
	catch {
		throw "Failed to refresh scenes!"
	}
}

#A function to show a text input box and return the entered text
function Show-PopupInputBox {
	param (
		[Parameter(Mandatory = $True)]
		[String]$InputDescription
	)
	$form = New-Object System.Windows.Forms.Form
	$form.Text = 'Input Requested'
	$form.Size = New-Object System.Drawing.Size(300, 200)
	$form.StartPosition = 'CenterScreen'
	$form.FormBorderStyle = 'FixedDialog'
	
	$okButton = New-Object System.Windows.Forms.Button
	$okButton.Location = New-Object System.Drawing.Point(75, 120)
	$okButton.Size = New-Object System.Drawing.Size(75, 23)
	$okButton.Text = 'OK'
	$okButton.DialogResult = [System.Windows.Forms.DialogResult]::OK
	$form.AcceptButton = $okButton
	$form.Controls.Add($okButton)
	
	$cancelButton = New-Object System.Windows.Forms.Button
	$cancelButton.Location = New-Object System.Drawing.Point(150, 120)
	$cancelButton.Size = New-Object System.Drawing.Size(75, 23)
	$cancelButton.Text = 'Cancel'
	$cancelButton.DialogResult = [System.Windows.Forms.DialogResult]::Cancel
	$form.CancelButton = $cancelButton
	$form.Controls.Add($cancelButton)
	
	$label = New-Object System.Windows.Forms.Label
	$label.Location = New-Object System.Drawing.Point(10, 20)
	$label.Size = New-Object System.Drawing.Size(280, 20)
	$label.Text = $InputDescription
	$form.Controls.Add($label)
	
	$textBox = New-Object System.Windows.Forms.TextBox
	$textBox.Location = New-Object System.Drawing.Point(10, 40)
	$textBox.Size = New-Object System.Drawing.Size(260, 20)
	$form.Controls.Add($textBox)
	
	$form.Topmost = $true
	
	$form.Add_Shown({
			$textBox.Select()
		})
	$result = $form.ShowDialog()
	
	if ($result -eq [System.Windows.Forms.DialogResult]::OK) {
		$DialogEntry = $textBox.Text
		return $DialogEntry
	}
}
#region Splash Screen Helper Function
function Show-SplashScreen {
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 2,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image) {
		$pict.Image = $Image;
	}
	else {
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title) {
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else {
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0) {
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) {
		$splashForm.ShowDialog()
	}
	else {
		$splashForm.Show()
	}
	
	if ($PassThru) {
		return $splashForm
	}
}
#endregion
#Button to make a new project
$newToolStripMenuItem_Click = {
	If ($ProjectLoaded) {
		#Need to add some functionality to confirm that you want to create a new project
		#Essentially, ask to save the existing project before making a new one
	}
	#If a file is not loaded, make a new project
	Else {
		New-RPGProject
	}
	
}
#Open an existing project
$openToolStripMenuItem_Click = {
	If ($ProjectLoaded) {
		#Need to add some functionality to confirm that you want to create a new project
		#Essentially, ask to save the existing project before making a new one
	}
	#If a file is not loaded, open a project
	Else {
		$FileBrowser = New-Object System.Windows.Forms.OpenFileDialog -Property @{
			InitialDirectory = [Environment]::GetFolderPath('Desktop')
			Filter		     = "PowerShell RPG (*.PSRPG) | *.PSRPG"
		}
		$FileBrowser.ShowDialog()
		#If a save location is chosen
		If ($FileBrowser.FileName) {
			Update-CurrentProject -ProjectFile $FileBrowser.FileName
		}
	}
}

#endregion

$TabSceneCreator_btnNewScene_Click = {
	New-RPGScene
}

$TabSceneCreator_ListBoxSceneList_SelectedIndexChanged = {
	$Script:CurrentSceneFriendlyName = "$($TabSceneCreator_ListBoxSceneList.SelectedItem)"
	$MainScreenCurrentSceneLabel.Text = "Current Scene: $($Script:CurrentSceneFriendlyName)"
	$Script:CurrentScene = $Script:SceneJSONObjects | where {$_.SceneName -eq "$($Script:CurrentSceneFriendlyName)"}
	$CurrentSceneGUID = $Script:CurrentScene| select -ExpandProperty SceneGUID
	$scene_SceneIDTextBox.Text = "$($CurrentSceneGUID)"
	$scene_ScenedescriptionTextBox.Text = $Script:CurrentScene.SceneEntryDescription
	$scene_GroupBox1.Update()
	$MainScreenCurrentSceneLabel.Update()
	
}


]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>